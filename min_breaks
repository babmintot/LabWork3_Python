def min_breaks(n, m, memo ={}):
    if (n, m) in memo:
        return memo[(n, m)]

    if n == 1 and m == 1:
        return 0

    if n > m:
        n, m = m, n

    min_b = float('inf')
    for i in range(1, n):
        breaks = 1 + min_breaks(n - i, m, memo) + min_breaks(i, m, memo)
        min_b = min(min_b, breaks)

    for j in range(1, m):
        breaks = 1 + min_breaks(n, m - j, memo) + min_breaks(n, j, memo)
        min_b = min(min_b, breaks)

    memo[(n, m)] = min_b
    return min_b


n = 3
m = 5
print(min_breaks(n, m))
